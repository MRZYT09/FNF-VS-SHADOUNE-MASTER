setCamZoom(1)
setHudZoom(2)

// zoms
	showOnlyStrums = true
//bara de vida y acurracy true = no mostrar false = si mostrar
	strumLine1Visible = false
	strumLine2Visible = false
// las flechas si mostras o no :v

	if curStep >= 0 and curStep < 263 then
			local currentBeat = (songPos / 1000)*(bpm/60)
				for i=0,5 do
					setActorX(_G['defaultStrum'..i..'X'] + 50 * math.sin((currentBeat + i*2) * math.pi), i)
					setActorY(_G['defaultStrum'..i..'Y'] + 8 * math.cos((currentBeat + i*0) * math.pi), i)
					tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
					tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
				end
    	end
// primer movimiento de decition ( derecha izquierda flechas)

if curStep >= 264 and curStep < 519 then
			local currentBeat = (songPos / 1000)*(bpm/60)
			for i=0,5 do
				setActorX(_G['defaultStrum'..i..'X'] + 50 * math.sin((currentBeat + i*2) * math.pi), i)
				setActorY(_G['defaultStrum'..i..'Y'] + 10 * math.cos((currentBeat + i*0.25) * math.pi), i)
					tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
					tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
			end
			end
//movimiento nashe(intro you-are-mine)

	if curStep >= 520 and curStep < 648 then
				local currentBeat = (songPos / 1000)*(bpm/60)
				for i=0,5 do
					setActorX(_G['defaultStrum'..i..'X'] + 50 * math.sin((currentBeat + i*2) * math.pi), i)
					setActorY(_G['defaultStrum'..i..'Y'] + 20 * math.cos((currentBeat + i*0.75) * math.pi), i)
					tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
					tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
				end
				end
//arriba abajo flechas(una por una)

if curStep >= 649 and curStep < 779 then
					local currentBeat = (songPos / 1000)*(bpm/60)
					for i=0,5 do
						setActorX(_G['defaultStrum'..i..'X'] + 8 * math.sin((currentBeat + i*0) * math.pi), i)
						setActorY(_G['defaultStrum'..i..'Y'] + 50 * math.cos((currentBeat + i*2) * math.pi), i)
						tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
						tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
					end
					end

//arriba abajo todas las flechas a la ves

if curStep >= 780 and curStep < 909 then
						local currentBeat = (songPos / 1000)*(bpm/60)
						for i=0,5 do
							setActorX(_G['defaultStrum'..i..'X'] + 50 * math.sin((currentBeat + i*2) * math.pi), i)
							setActorY(_G['defaultStrum'..i..'Y'] + 8 * math.cos((currentBeat + i*0) * math.pi), i)
							tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
							tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
						end
						end
//derecha izquierda normal

	if curStep >= 384 and curStep < 440 then
			local currentBeat = (songPos / 1000)*(bpm/60)
			for i=0,5 do
					setActorX(_G['defaultStrum'..i..'X'] + 41 * math.sin((currentBeat + i*0.40) * math.pi), i)
					setActorY(_G['defaultStrum'..i..'Y'] + 40 * math.cos((currentBeat + i*0.40) * math.pi), i)
					tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
					tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
					
				end
			end
//locura jajasjajsajs


if curStep >= 1207 and curStep < 1208 then
								local currentBeat = (songPos / 1000)*(bpm/60)
								for i=0,5 do
									setActorX(_G['defaultStrum'..i..'X'] + 0 * math.sin((currentBeat + i*0) * math.pi), i)
									setActorY(_G['defaultStrum'..i..'Y'] + 0 * math.cos((currentBeat + i*0) * math.pi), i)
							tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
							tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
								end
								end

// y volvemon a la realidad

if curStep >= 1225 and curStep < 1522 then
								local currentBeat = (songPos / 1000)*(bpm/60)
								for i=0,5 do
									setActorX(_G['defaultStrum'..i..'X'] + 20 * math.sin((currentBeat + i*0) * math.pi), i)
									setActorY(_G['defaultStrum'..i..'Y'] + 5 * math.cos((currentBeat + i*0.50) * math.pi), i)
							tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
							tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
								end

// movimiento pequeñito


// enemigo


	if curStep >= 0 and curStep < 263 then
			local currentBeat = (songPos / 1000)*(bpm/60)
				for i=6,12 do
					setActorX(_G['defaultStrum'..i..'X'] + 50 * math.sin((currentBeat + i*2) * math.pi), i)
					setActorY(_G['defaultStrum'..i..'Y'] + 8 * math.cos((currentBeat + i*0) * math.pi), i)
					tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
					tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
				end
    	end
// primer movimiento de decition ( derecha izquierda flechas)

if curStep >= 264 and curStep < 519 then
			local currentBeat = (songPos / 1000)*(bpm/60)
			for i=6,12 do
				setActorX(_G['defaultStrum'..i..'X'] + 50 * math.sin((currentBeat + i*2) * math.pi), i)
				setActorY(_G['defaultStrum'..i..'Y'] + 10 * math.cos((currentBeat + i*0.25) * math.pi), i)
					tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
					tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
			end
			end
//movimiento nashe(intro you-are-mine)

	if curStep >= 520 and curStep < 648 then
				local currentBeat = (songPos / 1000)*(bpm/60)
				for i=6,12 do
					setActorX(_G['defaultStrum'..i..'X'] + 50 * math.sin((currentBeat + i*2) * math.pi), i)
					setActorY(_G['defaultStrum'..i..'Y'] + 20 * math.cos((currentBeat + i*0.75) * math.pi), i)
					tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
					tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
				end
				end
//arriba abajo flechas(una por una)

if curStep >= 649 and curStep < 779 then
					local currentBeat = (songPos / 1000)*(bpm/60)
					for i=6,12 do
						setActorX(_G['defaultStrum'..i..'X'] + 8 * math.sin((currentBeat + i*0) * math.pi), i)
						setActorY(_G['defaultStrum'..i..'Y'] + 50 * math.cos((currentBeat + i*2) * math.pi), i)
						tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
						tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
					end
					end

//arriba abajo todas las flechas a la ves

if curStep >= 780 and curStep < 909 then
						local currentBeat = (songPos / 1000)*(bpm/60)
						for i=6,12 do
							setActorX(_G['defaultStrum'..i..'X'] + 50 * math.sin((currentBeat + i*2) * math.pi), i)
							setActorY(_G['defaultStrum'..i..'Y'] + 8 * math.cos((currentBeat + i*0) * math.pi), i)
							tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
							tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
						end
						end
//derecha izquierda normal

	if curStep >= 384 and curStep < 440 then
			local currentBeat = (songPos / 1000)*(bpm/60)
			for i=6,12 do
					setActorX(_G['defaultStrum'..i..'X'] + 41 * math.sin((currentBeat + i*0.40) * math.pi), i)
					setActorY(_G['defaultStrum'..i..'Y'] + 40 * math.cos((currentBeat + i*0.40) * math.pi), i)
					tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
					tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
					
				end
			end
//locura jajasjajsajs


if curStep >= 1207 and curStep < 1208 then
								local currentBeat = (songPos / 1000)*(bpm/60)
								for i=6,12 do
									setActorX(_G['defaultStrum'..i..'X'] + 0 * math.sin((currentBeat + i*0) * math.pi), i)
									setActorY(_G['defaultStrum'..i..'Y'] + 0 * math.cos((currentBeat + i*0) * math.pi), i)
							tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
							tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
								end
								end

// y volvemon a la realidad

if curStep >= 1225 and curStep < 1522 then
								local currentBeat = (songPos / 1000)*(bpm/60)
								for i=6,12 do
									setActorX(_G['defaultStrum'..i..'X'] + 20 * math.sin((currentBeat + i*0) * math.pi), i)
									setActorY(_G['defaultStrum'..i..'Y'] + 5 * math.cos((currentBeat + i*0.50) * math.pi), i)
							tweenPosXAngle(i, _G['defaultStrum'..i..'X'], 0, 0.6, 'setDefault')
							tweenPosYAngle(i, _G['defaultStrum'..i..'Y'], 0, 0.6, 'setDefault')
								end

// movimiento pequeñito


// bf